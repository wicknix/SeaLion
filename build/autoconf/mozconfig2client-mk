#! /bin/sh
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# mozconfig2client-mk - Translates .mozconfig into options for client.mk.
#    Prints defines to stdout.
#
# See mozconfig2configure for more details

print_header() {
  cat <<EOF
# gmake
# This file is automatically generated for client.mk.
# Do not edit. Edit $FOUND_MOZCONFIG instead.

EOF
}

ac_add_options() {
  for _opt
  do
    case "$_opt" in
    --target=*)
      echo $_opt | sed s/--target/CONFIG_GUESS/
      ;;
    *)
      echo "# $_opt is used by configure (not client.mk)"
      ;;
    esac
  done
}

ac_add_app_options() {
  echo "# $* is used by configure (not client.mk)"
}

mk_add_options() {
  for _opt
  do
    # Escape shell characters, space, tab, dollar, quote, backslash,
    # and substitute '@<word>@' with '$(<word>)'.
    _opt=`echo "$_opt" | sed -e 's/\([\"\\]\)/\\\\\1/g; s/@\([^@]*\)@/\$(\1)/g;'`
    echo $_opt;
  done
}

# Main
#--------------------------------------------------

scriptdir=`dirname $0`
topsrcdir=$1

# If the path changes, configure should be rerun
echo "# PATH=$PATH"

# If FOUND_MOZCONFIG isn't set, look for it and make sure the script doesn't error out
isfoundset=${FOUND_MOZCONFIG+yes}
if [ -z $isfoundset ]; then
  FOUND_MOZCONFIG=`$scriptdir/mozconfig-find $topsrcdir`
  if [ $? -ne 0 ]; then
    echo '$(error Fix above errors before continuing.)'
  else
    isfoundset=yes
  fi
fi

if [ -n $isfoundset ]; then
  if [ "$FOUND_MOZCONFIG" ]
  then
    print_header
    . "$FOUND_MOZCONFIG"
    echo "FOUND_MOZCONFIG := $FOUND_MOZCONFIG"
  fi
fi
