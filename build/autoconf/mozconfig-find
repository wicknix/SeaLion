#! /bin/sh
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# mozconfigfind - Loads options from .mozconfig onto configure's
#    command-line. The .mozconfig file is searched for in the 
#    order:
#       If $MOZCONFIG is set, use that.
#       If one of $TOPSRCDIR/.mozconfig or $TOPSRCDIR/mozconfig exists, use it.
#       If both exist, or if various legacy locations contain a mozconfig, error.
#       Otherwise, use the default build options.
#
topsrcdir=$1

abspath() {
  if uname -s | grep -q MINGW; then
    # We have no way to figure out whether we're in gmake or pymake right
    # now. gmake gives us Unix-style paths while pymake gives us Windows-style
    # paths, so attempt to handle both.
    regexes='^\([A-Za-z]:\|\\\\\|\/\) ^\/'
  else
    regexes='^\/'
  fi

  for regex in $regexes; do
    if echo $1 | grep -q $regex; then
      echo $1
      return
    fi
  done

  # If we're at this point, we have a relative path
  echo `pwd`/$1
}

if [ -n "$MOZCONFIG" ] && ! [ -f "$MOZCONFIG" ]; then
  echo "Specified MOZCONFIG \"$MOZCONFIG\" does not exist!" 1>&2
  exit 1
fi

if [ -n "$MOZ_MYCONFIG" ]; then
  echo "Your environment currently has the MOZ_MYCONFIG variable set to \"$MOZ_MYCONFIG\". MOZ_MYCONFIG is no longer supported. Please use MOZCONFIG instead." 1>&2
  exit 1
fi

if [ -z "$MOZCONFIG" ] && [ -f "$topsrcdir/.mozconfig" ] && [ -f "$topsrcdir/mozconfig" ]; then
  echo "Both \$topsrcdir/.mozconfig and \$topsrcdir/mozconfig are supported, but you must choose only one. Please remove the other." 1>&2
  exit 1
fi

for _config in "$MOZCONFIG" \
               "$topsrcdir/.mozconfig" \
               "$topsrcdir/mozconfig"
do
  if test -f "$_config"; then
    abspath $_config
    exit 0
  fi
done

# We used to support a number of other implicit .mozconfig locations. We now
# detect if we were about to use any of these locations and issue an error if we
# find any.
for _config in "$topsrcdir/mozconfig.sh" \
               "$topsrcdir/myconfig.sh" \
               "$HOME/.mozconfig" \
               "$HOME/.mozconfig.sh" \
               "$HOME/.mozmyconfig.sh"
do
  if test -f "$_config"; then
    echo "You currently have a mozconfig at \"$_config\". This implicit location is no longer supported. Please move it to $topsrcdir/.mozconfig or specify it explicitly via \$MOZCONFIG." 1>&2
    exit 1
  fi
done
