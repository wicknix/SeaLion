/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"
interface calIItemBase;
interface calIAttendee;

/**
 * Accesses scheduling specific information of calendar items.
 * Implementation by providers is optional.
 */
[scriptable, uuid(9221e243-c97e-4c5f-9e00-5d7d3521bb44)]
interface calISchedulingSupport : nsISupports
{
    /**
     * Tests whether the passed item corresponds to an invitation, e.g.
     * the CUA or server has placed it in the calendar.
     *
     * @param aItem     Item to be tested.
     * @return          Whether the passed item corresponds to an invitation.
     */
    boolean isInvitation(in calIItemBase aItem);

    /**
     * Gets the invited attendee if the passed item corresponds to
     * an invitation. UI code will use that attendee to modify e.g. PARTSTAT.
     * If isInvitation returns true, getInvitedAttendee must return
     * an attendee. If isInvitation is false, getInvitedAttendee may return
     * an attendee in case the organizer (and owner of the calendar) has
     * invited himself.
     *
     * @param aItem     Invitation item.
     * @return          Attendee object, or null.
     */
    calIAttendee getInvitedAttendee(in calIItemBase aItem);

    /**
     * Checks whether the provider keeps track of sending out the proper
     * iTIP/iMIP message for a particular item.
     *
     * @param aMethod a iTIP method
     * @param aItem an item that has been modified/deleted etc.
     * @return true, if the provider keeps track of sending out passed message
     */
    boolean canNotify(in AUTF8String aMethod, in calIItemBase aItem);
};
